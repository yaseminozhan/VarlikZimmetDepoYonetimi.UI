// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VarlıkZimmetDepoYonetimi.UI.Entities;

#nullable disable

namespace VarlıkZimmetDepoYonetimi.UI.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EkipSirket", b =>
                {
                    b.Property<int>("EkipId")
                        .HasColumnType("int");

                    b.Property<int>("SirketId")
                        .HasColumnType("int");

                    b.HasKey("EkipId", "SirketId");

                    b.HasIndex("SirketId");

                    b.ToTable("EkipSirket");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.BarkodluUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("BarkodNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BarkodluUrunler");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.BarkodsuzUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BarkodsuzUrunler");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Calisan", b =>
                {
                    b.Property<int>("CalisanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CalisanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanId"));

                    b.Property<string>("AboneNo")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AdSoyad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EkipId")
                        .HasColumnType("int")
                        .HasColumnName("EkipID");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<string>("Sifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CalisanId");

                    b.HasIndex("EkipId");

                    b.HasIndex("RolId");

                    b.ToTable("Calisan");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Depo", b =>
                {
                    b.Property<int>("DepoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepoId"));

                    b.Property<string>("DepoAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.HasKey("DepoId");

                    b.HasIndex("SirketId");

                    b.ToTable("Depo");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.DepoUrun", b =>
                {
                    b.Property<int>("DepoUrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepoUrunID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepoUrunId"));

                    b.Property<string>("Birim")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int")
                        .HasColumnName("DepoID");

                    b.Property<short?>("Miktar")
                        .HasColumnType("smallint");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("DepoUrunId");

                    b.HasIndex("DepoId");

                    b.HasIndex("UrunId");

                    b.ToTable("DepoUrun");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Ekip", b =>
                {
                    b.Property<int>("EkipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EkipID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EkipId"));

                    b.Property<string>("EkipAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EkipId");

                    b.ToTable("Ekip");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.KayipCalinti", b =>
                {
                    b.Property<int>("KayipCalintiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KayipCalintiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KayipCalintiId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("Tarih")
                        .HasColumnType("smallint");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("KayipCalintiId");

                    b.HasIndex("UrunId");

                    b.ToTable("KayipCalinti");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ModelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelId"));

                    b.Property<string>("ModelAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UstModelId")
                        .HasColumnType("int")
                        .HasColumnName("UstModelID");

                    b.HasKey("ModelId");

                    b.HasIndex("UstModelId");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Musteri", b =>
                {
                    b.Property<int>("MusteriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MusteriID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriId"));

                    b.Property<string>("AdSoyad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MusteriId");

                    b.ToTable("Musteri");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.MusteriZimmet", b =>
                {
                    b.Property<int>("MusteriZimmetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MusteriZimmetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriZimmetId"));

                    b.Property<int>("MusteriId")
                        .HasColumnType("int")
                        .HasColumnName("MusteriID");

                    b.Property<DateTime?>("TuketmeTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("ZimmetId")
                        .HasColumnType("int")
                        .HasColumnName("ZimmetID");

                    b.HasKey("MusteriZimmetId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("ZimmetId");

                    b.ToTable("MusteriZimmet");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.MusteriZimmetIptalIade", b =>
                {
                    b.Property<int>("MusteriZimmetİptalIadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MusteriZimmetİptalIadeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriZimmetİptalIadeId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IadeMi")
                        .HasColumnType("bit");

                    b.Property<int?>("MusteriZimmetId")
                        .HasColumnType("int")
                        .HasColumnName("MusteriZimmetID");

                    b.Property<string>("Tarih")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MusteriZimmetİptalIadeId");

                    b.HasIndex("MusteriZimmetId");

                    b.ToTable("MusteriZimmetIptalIade");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("RolAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Sayfa", b =>
                {
                    b.Property<int>("SayfaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SayfaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SayfaId"));

                    b.Property<string>("SayfaPath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SayfaId");

                    b.ToTable("Sayfa");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.SayfaYetki", b =>
                {
                    b.Property<int>("SayfaId")
                        .HasColumnType("int")
                        .HasColumnName("SayfaID");

                    b.Property<int>("YetkiId")
                        .HasColumnType("int")
                        .HasColumnName("YetkiID");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.HasKey("SayfaId", "YetkiId", "RolId");

                    b.HasIndex("RolId");

                    b.HasIndex("YetkiId");

                    b.ToTable("SayfaYetki");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Sirket", b =>
                {
                    b.Property<int>("SirketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SirketId"));

                    b.Property<string>("SirketAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SirketId");

                    b.ToTable("Sirket");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Statu", b =>
                {
                    b.Property<int>("StatuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatuID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatuId"));

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("StatuAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatuId");

                    b.ToTable("Statu");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("BarkodluMu")
                        .HasColumnType("bit");

                    b.Property<bool?>("GarantiliMi")
                        .HasColumnType("bit");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int")
                        .HasColumnName("ModelID");

                    b.Property<string>("UrunAdi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("UrunGuncelFiyat")
                        .HasColumnType("money");

                    b.Property<decimal?>("UrunMaliyeti")
                        .HasColumnType("money");

                    b.HasKey("UrunId");

                    b.HasIndex("ModelId");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.UrunBarkod", b =>
                {
                    b.Property<int>("UrunBarkodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrunBarkodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunBarkodId"));

                    b.Property<Guid?>("BarkodNo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("UrunBarkodId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunBarkod");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.UrunDetay", b =>
                {
                    b.Property<int>("UrunDetayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrunDetayID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunDetayId"));

                    b.Property<short?>("Miktar")
                        .HasColumnType("smallint");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("UrunDetayId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunDetay");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.UrunStatu", b =>
                {
                    b.Property<int>("UrunStatuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrunStatuID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunStatuId"));

                    b.Property<int>("StatuId")
                        .HasColumnType("int")
                        .HasColumnName("StatuID");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime");

                    b.Property<int>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("UrunStatuId");

                    b.HasIndex("StatuId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunStatu");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Yetki", b =>
                {
                    b.Property<int>("YetkiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("YetkiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YetkiId"));

                    b.Property<string>("YetkiAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("YetkiId");

                    b.ToTable("Yetki");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Zimmet", b =>
                {
                    b.Property<int>("ZimmetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ZimmetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZimmetId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("AtananCalisanId")
                        .HasColumnType("int")
                        .HasColumnName("AtananCalisanID");

                    b.Property<int?>("AtayanCalisanId")
                        .HasColumnType("int")
                        .HasColumnName("AtayanCalisanID");

                    b.Property<string>("CalisanAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ekip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.Property<DateTime?>("ZimmetBaslangicTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ZimmetBitisTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("ZimmetId");

                    b.HasIndex("AtananCalisanId");

                    b.HasIndex("AtayanCalisanId");

                    b.HasIndex("UrunId");

                    b.ToTable("Zimmet");
                });

            modelBuilder.Entity("EkipSirket", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Ekip", null)
                        .WithMany()
                        .HasForeignKey("EkipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Sirket", null)
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Calisan", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Ekip", "Ekip")
                        .WithMany("Calisans")
                        .HasForeignKey("EkipId");

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Rol", "Rol")
                        .WithMany("Calisans")
                        .HasForeignKey("RolId");

                    b.Navigation("Ekip");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Depo", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Sirket", "Sirket")
                        .WithMany("Depos")
                        .HasForeignKey("SirketId");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.DepoUrun", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Depo", "Depo")
                        .WithMany("DepoUruns")
                        .HasForeignKey("DepoId");

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", "Urun")
                        .WithMany("DepoUruns")
                        .HasForeignKey("UrunId");

                    b.Navigation("Depo");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.KayipCalinti", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", "Urun")
                        .WithMany("KayipCalintis")
                        .HasForeignKey("UrunId");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Model", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Model", "UstModel")
                        .WithMany("InverseUstModel")
                        .HasForeignKey("UstModelId");

                    b.Navigation("UstModel");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.MusteriZimmet", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Musteri", "Musteri")
                        .WithMany("MusteriZimmets")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Zimmet", "Zimmet")
                        .WithMany("MusteriZimmets")
                        .HasForeignKey("ZimmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Zimmet");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.MusteriZimmetIptalIade", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.MusteriZimmet", "MusteriZimmet")
                        .WithMany("MusteriZimmetIptalIades")
                        .HasForeignKey("MusteriZimmetId");

                    b.Navigation("MusteriZimmet");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.SayfaYetki", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Rol", "Rol")
                        .WithMany("SayfaYetkis")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Sayfa", "Sayfa")
                        .WithMany("SayfaYetkis")
                        .HasForeignKey("SayfaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Yetki", "Yetki")
                        .WithMany("SayfaYetkis")
                        .HasForeignKey("YetkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Sayfa");

                    b.Navigation("Yetki");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Model", "Model")
                        .WithMany("Uruns")
                        .HasForeignKey("ModelId");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.UrunBarkod", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", "Urun")
                        .WithMany("UrunBarkods")
                        .HasForeignKey("UrunId");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.UrunDetay", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", "Urun")
                        .WithMany("UrunDetays")
                        .HasForeignKey("UrunId");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.UrunStatu", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Statu", "Statu")
                        .WithMany("UrunStatus")
                        .HasForeignKey("StatuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", "Urun")
                        .WithMany("UrunStatus")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Statu");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Zimmet", b =>
                {
                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Calisan", "AtananCalisan")
                        .WithMany("ZimmetAtananCalisans")
                        .HasForeignKey("AtananCalisanId");

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Calisan", "AtayanCalisan")
                        .WithMany("ZimmetAtayanCalisans")
                        .HasForeignKey("AtayanCalisanId");

                    b.HasOne("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", "Urun")
                        .WithMany("Zimmets")
                        .HasForeignKey("UrunId");

                    b.Navigation("AtananCalisan");

                    b.Navigation("AtayanCalisan");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Calisan", b =>
                {
                    b.Navigation("ZimmetAtananCalisans");

                    b.Navigation("ZimmetAtayanCalisans");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Depo", b =>
                {
                    b.Navigation("DepoUruns");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Ekip", b =>
                {
                    b.Navigation("Calisans");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Model", b =>
                {
                    b.Navigation("InverseUstModel");

                    b.Navigation("Uruns");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Musteri", b =>
                {
                    b.Navigation("MusteriZimmets");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.MusteriZimmet", b =>
                {
                    b.Navigation("MusteriZimmetIptalIades");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Rol", b =>
                {
                    b.Navigation("Calisans");

                    b.Navigation("SayfaYetkis");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Sayfa", b =>
                {
                    b.Navigation("SayfaYetkis");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Sirket", b =>
                {
                    b.Navigation("Depos");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Statu", b =>
                {
                    b.Navigation("UrunStatus");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Urun", b =>
                {
                    b.Navigation("DepoUruns");

                    b.Navigation("KayipCalintis");

                    b.Navigation("UrunBarkods");

                    b.Navigation("UrunDetays");

                    b.Navigation("UrunStatus");

                    b.Navigation("Zimmets");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Yetki", b =>
                {
                    b.Navigation("SayfaYetkis");
                });

            modelBuilder.Entity("VarlıkZimmetDepoYonetimi.UI.Entities.Zimmet", b =>
                {
                    b.Navigation("MusteriZimmets");
                });
#pragma warning restore 612, 618
        }
    }
}
